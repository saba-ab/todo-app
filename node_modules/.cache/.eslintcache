[{"/Users/saba/Desktop/todo-app/src/index.js":"1","/Users/saba/Desktop/todo-app/src/App.js":"2","/Users/saba/Desktop/todo-app/src/reportWebVitals.js":"3","/Users/saba/Desktop/todo-app/src/ToDo.jsx":"4","/Users/saba/Desktop/todo-app/src/Categories.jsx":"5","/Users/saba/Desktop/todo-app/src/Tasks.jsx":"6","/Users/saba/Desktop/todo-app/src/TaskList.jsx":"7"},{"size":535,"mtime":1698088906806,"results":"8","hashOfConfig":"9"},{"size":155,"mtime":1698088906805,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1698088906806,"results":"11","hashOfConfig":"9"},{"size":2416,"mtime":1698088906806,"results":"12","hashOfConfig":"9"},{"size":394,"mtime":1698088906805,"results":"13","hashOfConfig":"9"},{"size":649,"mtime":1698088906805,"results":"14","hashOfConfig":"9"},{"size":1139,"mtime":1698088906805,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fw83bo",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/saba/Desktop/todo-app/src/index.js",[],[],"/Users/saba/Desktop/todo-app/src/App.js",[],[],"/Users/saba/Desktop/todo-app/src/reportWebVitals.js",[],[],"/Users/saba/Desktop/todo-app/src/ToDo.jsx",["38"],[],"import \"./styles/todo.css\";\nimport Categories from \"./Categories\";\nimport Tasks from \"./Tasks\";\nimport { useState } from \"react\";\nfunction ToDo() {\n  const categoriesList = [\"All\", \"Groceries\", \"College\", \"Payments\"];\n  const [category, setCategory] = useState(\"All\");\n  const selectCategory = (category) => {\n    setCategory(category);\n  };\n\n  const highlight = (cat) => {\n    return cat === category ? { color: \"#EA5959\" } : { color: \"#525252\" };\n  };\n  const [unCategorized, setUnCategorized] = useState([\n    \"Get new helmet\",\n    \"Replace laptop's screen\",\n  ]);\n  const [groceries, setGroceries] = useState([\"Purchase Milk and corn flakes\"]);\n  const [college, setCollege] = useState([\"Complete Assignments\"]);\n  const [payments, setPayments] = useState([\"Pay mortgage\"]);\n  const [all, setAll] = useState([\n    ...unCategorized,\n    ...groceries,\n    ...college,\n    ...payments,\n  ]);\n  let selectedCategory;\n  let setCategoryState;\n  if (category === \"All\") {\n    selectedCategory = all;\n    setCategoryState = setAll;\n  } else if (category === \"Groceries\") {\n    selectedCategory = groceries;\n    setCategoryState = setGroceries;\n  } else if (category === \"College\") {\n    selectedCategory = groceries;\n    setCategoryState = setCollege;\n  } else if (category === \"Payments\") {\n    selectedCategory = payments;\n    setCategoryState = setPayments;\n  }\n  const [input, setInput] = useState(\"\");\n  const handleInput = (e) => {\n    setInput(e.target.value);\n  };\n  const submitValue = (e) => {\n    if (e.key === \"Enter\" && input.trim() !== \"\") {\n      setCategoryState((pre) => [...pre, input]);\n      setInput(\"\");\n    }\n  };\n  const handleUncategorized = (cat) => {\n    return cat === \"All\" ? \"Uncategorized\" : category;\n  };\n  const removeTask = (index) => {\n    setCategoryState((prevTasks) => {\n      return prevTasks.filter((_, taskIndex) => taskIndex !== index);\n    });\n  };\n  return (\n    <div className=\"todo-app\">\n      <Categories\n        categoryList={categoriesList}\n        highlight={highlight}\n        selectCategory={selectCategory}\n      />\n      <Tasks\n        removeTask={removeTask}\n        submitValue={submitValue}\n        value={input}\n        setCategoryState={setCategoryState}\n        handleInput={handleInput}\n        category={category}\n        handleUncategorized={handleUncategorized}\n        selectedCategory={selectedCategory}\n      />\n    </div>\n  );\n}\n\nexport default ToDo;\n","/Users/saba/Desktop/todo-app/src/Categories.jsx",[],[],"/Users/saba/Desktop/todo-app/src/Tasks.jsx",[],[],"/Users/saba/Desktop/todo-app/src/TaskList.jsx",[],[],{"ruleId":"39","severity":1,"message":"40","line":15,"column":25,"nodeType":"41","messageId":"42","endLine":15,"endColumn":41},"no-unused-vars","'setUnCategorized' is assigned a value but never used.","Identifier","unusedVar"]